# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:SourceSansPro 11

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
# set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Media player controls
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPause exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run -sb '#7e46a6'
# A more modern dmenu replacement is rofi:
# bindsym $mod+d exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop -nb '#222222' -sf '#eeeeee' -sb '#9e1e15' -nf '#bbbbbb'

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Control+h split h

# split in vertical orientation
bindsym $mod+Control+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Creating variables with my monitors names
set $monitor_right DP-5
set $monitor_left HDMI-0

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
# Right monitor workspaces
set $wsr1 "1"
set $wsr2 "2"
set $wsr3 "3"
set $wsr4 "4"
set $wsr5 "5"
set $wsr6 "6"
set $wsr7 "7"
set $wsr8 "8"
set $wsr9 "9"
set $wsr10 "10"

# Assign workspaces to right monitor
workspace $wsr1 output $monitor_right
workspace $wsr2 output $monitor_right
workspace $wsr3 output $monitor_right
workspace $wsr4 output $monitor_right
workspace $wsr5 output $monitor_right
workspace $wsr6 output $monitor_right
workspace $wsr7 output $monitor_right
workspace $wsr8 output $monitor_right
workspace $wsr9 output $monitor_right
workspace $wsr10 output $monitor_right

# switch to workspace (right monitor)
bindsym $mod+1 workspace number $wsr1
bindsym $mod+2 workspace number $wsr2
bindsym $mod+3 workspace number $wsr3
bindsym $mod+4 workspace number $wsr4
bindsym $mod+5 workspace number $wsr5
bindsym $mod+6 workspace number $wsr6
bindsym $mod+7 workspace number $wsr7
bindsym $mod+8 workspace number $wsr8
bindsym $mod+9 workspace number $wsr9
bindsym $mod+0 workspace number $wsr10

# move focused container to workspace (right monitor)
bindsym $mod+Shift+1 move container to workspace number $wsr1
bindsym $mod+Shift+2 move container to workspace number $wsr2
bindsym $mod+Shift+3 move container to workspace number $wsr3
bindsym $mod+Shift+4 move container to workspace number $wsr4
bindsym $mod+Shift+5 move container to workspace number $wsr5
bindsym $mod+Shift+6 move container to workspace number $wsr6
bindsym $mod+Shift+7 move container to workspace number $wsr7
bindsym $mod+Shift+8 move container to workspace number $wsr8
bindsym $mod+Shift+9 move container to workspace number $wsr9
bindsym $mod+Shift+0 move container to workspace number $wsr10

# Left monitor workspaces
set $wsl1 "11"
set $wsl2 "12"
set $wsl3 "13"
set $wsl4 "14"
set $wsl5 "15"
set $wsl6 "16"
set $wsl7 "17"
set $wsl8 "18"
set $wsl9 "19"
set $wsl10 "20"

# Assign workspaces to left monitor
workspace $wsl1 output $monitor_left
workspace $wsl2 output $monitor_left
workspace $wsl3 output $monitor_left
workspace $wsl4 output $monitor_left
workspace $wsl5 output $monitor_left
workspace $wsl6 output $monitor_left
workspace $wsl7 output $monitor_left
workspace $wsl8 output $monitor_left
workspace $wsl9 output $monitor_left
workspace $wsl10 output $monitor_left

# switch to workspace (left monitor)
bindsym $mod+Control+1 workspace number $wsl1
bindsym $mod+Control+2 workspace number $wsl2
bindsym $mod+Control+3 workspace number $wsl3
bindsym $mod+Control+4 workspace number $wsl4
bindsym $mod+Control+5 workspace number $wsl5
bindsym $mod+Control+6 workspace number $wsl6
bindsym $mod+Control+7 workspace number $wsl7
bindsym $mod+Control+8 workspace number $wsl8
bindsym $mod+Control+9 workspace number $wsl9
bindsym $mod+Control+0 workspace number $wsl10

# move focused container to workspace (left  monitor)
bindsym $mod+Shift+Control+1 move container to workspace number $wsl1
bindsym $mod+Shift+Control+2 move container to workspace number $wsl2
bindsym $mod+Shift+Control+3 move container to workspace number $wsl3
bindsym $mod+Shift+Control+4 move container to workspace number $wsl4
bindsym $mod+Shift+Control+5 move container to workspace number $wsl5
bindsym $mod+Shift+Control+6 move container to workspace number $wsl6
bindsym $mod+Shift+Control+7 move container to workspace number $wsl7
bindsym $mod+Shift+Control+8 move container to workspace number $wsl8
bindsym $mod+Shift+Control+9 move container to workspace number $wsl9
bindsym $mod+Shift+Control+0 move container to workspace number $wsl10

# Makes applications launch in certain workspaces
for_window [class="Spotify"] move to workspace $wsl10
for_window [class="discord"] move to workspace $wsl9
for_window [class="Thunderbird"] move to workspace $wsl8

# Disable windows titlebars.
for_window [class=".*"] border pixel 0

# Gaps lmaoo
gaps inner 5
gaps outer 5

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Hide the bar that indicates where the next window will appear.
hide_edge_borders both

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
        #status_command SCRIPT_DIR=~/.config/i3blocks i3blocks -c ~/.config/i3blocks/config
	#font pango:SourceSansPro 8, FontAwesome 8
	#position top
	
	#colors {
	#	focused_workspace #9e1e15 #80170f white
	#	urgent_workspace #d7e305 #a2ab03 white
	#}
#}

# Keyboard layout
exec_always --no-startup-id setxkbmap latam

# Monitors settings (currently doing this with nvidia settings)
# exec_always --no-startup-id xrandr --output DP-5 --auto --right-of HDMI-0
# exec_always --no-startup-id xrandr --output DP-5 --auto --primary

# Lock screen
bindsym $mod+Shift+x exec --no-startup-id i3lock -t -i ~/Pictures/wallpaper.png

# Wallpaper nitrogen
exec --no-startup-id nitrogen --restore &

# Execute picom, I need to use picom-git with my current config.
exec_always --no-startup-id "picom --experimental-backend --config ~/.config/picom.conf"

# Execute polybar
exec_always --no-startup-id ~/.config/polybar/launch.sh

# Prevent screen from sleaping.
exec_always --no-startup-id "xset s 0 0 -dpms"

# Polkit agent autostart
exec_always --no-startup-id "lxsession"

# Set mouse speed
exec_always --no-startup-id "xinput --set-prop 'pointer:Logitech G305' 'Coordinate Transformation Matrix' 0.5 0 0 0 0.5 0 0 0 1"

# Start spotify at startup
exec --no-startup-id spotify

# Start Thunderbird at startup
exec --no-startup-id thunderbird

# Autotiling like bspwm, you need to install autotiling(aur)
# exec_always --no-startup-id autotiling

# Mount OneDrive
exec --no-startup-id "sh -c \"rclone --vfs-cache-mode writes mount onedrive: ~/onedrive\""

# Start dunst
exec_always --no-startup-id /usr/bin/dunst
